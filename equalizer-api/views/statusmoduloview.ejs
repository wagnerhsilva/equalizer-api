<!DOCTYPE html>
<html lang="en-us" ng-app="app">

<head>
    <% include partials/head %>
</head>

<body class="">
    <% include partials/header %>
        <div id="main" role="main">

            <!-- RIBBON -->
            <div id="ribbon">

                <!-- breadcrumb -->
                <ol class="breadcrumb">
                    <li>Status</li>
                    <li>Módulos</li>
                </ol>
            </div>
            <div id="content">
                <div class="row">
                    <article class="col-sm-12 col-md-12 col-lg-12">

                        <!-- Widget ID (each widget will need unique ID)-->
                        <div class="jarviswidget" id="wid-id-4" data-widget-editbutton="false" data-widget-custombutton="false">
                            <header>
                                <span class="widget-icon"><i class="fa fa-edit"></i></span>
                                <h2>Status dos Módulo </h2>

                            </header>
                            <div>
                                <div class="jarviswidget-editbox">
                                </div>
                                <div class="widget-body">
                                    <ng-view></ng-view>
                                </div>
                            </div>
                        </div>
                    </article>

                </div>
                <script type="text/ng-template" id="/statusModulo.html">
                    <section id="visao1">
                        <button id="btn" class="btn btn-primary pull-right" onclick="alterarVisao();">Alterar Visão</button>
                        <div ng-repeat="string in stringsDistintas" on-finish-render="ngRepeatFinished">
                            <h3>{{ string }}</h3>
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered table-hover datatabletemplate">
                                    <thead>
                                        <tr>
                                            <td class="no-sort" align="center">Bateria</td>
                                            <td align="center">Tensão</td>
                                            <td align="center">Temperatura</td>
                                            <td align="center">Impedância</td>
                                            <td align="center">Equalização</td>
                                            <td align="center">Status</td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr ng-repeat="status in statusModulos | filter: { string: string }" ng-class="rowClass(status)">
                                            <td align="center">{{status.bateria}}</td>
                                            <td align="center">{{status.tensao}}</td>
                                            <td align="center">{{status.temperatura}}</td>
                                            <td align="center">{{status.impedancia}}</td>
                                            <td align="center">
                                                <span ng-if="status.percentualEqualizacao <= 20" dynamicbar1 data="x.bars">20,30,40,50,60</span>
                                                <span ng-if="status.percentualEqualizacao <= 40 && status.percentualEqualizacao > 20" dynamicbar2 data="x.bars">20,30,40,50,60</span>
                                                <span ng-if="status.percentualEqualizacao <= 60 && status.percentualEqualizacao > 40" dynamicbar3 data="x.bars">20,30,40,50,60</span>
                                                <span ng-if="status.percentualEqualizacao <= 80 && status.percentualEqualizacao > 60" dynamicbar4 data="x.bars">20,30,40,50,60</span>
                                                <span ng-if="status.percentualEqualizacao <= 100 && status.percentualEqualizacao > 80" dynamicbar5 data="x.bars">20,30,40,50,60</span>
                                            </td>
                                            <td align="center">
                                                <img ng-if="status.temperatura < status.min_temp || status.temperatura > status.max_temp || status.impedancia < status.min_imp || status.impedancia > status.max_imp || status.tensao < status.min_tensao || status.tensao > status.max_tensao"
                                                    src="/smartadmin/img/red_bullet.png" width="20" />
                                                <img ng-if="status.temperatura >= status.min_temp && status.temperatura <= status.max_temp && status.impedancia >= status.min_imp && status.impedancia <= status.max_imp && status.tensao >= status.min_tensao && status.tensao <= status.max_tensao"
                                                    src="/smartadmin/img/green_bullet.png" width="20" />
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </section>
                    <section id="visao2">
                        <button id="btn" class="btn btn-primary pull-right" onclick="alterarVisao();">Alterar Visão</button>
                        <div ng-repeat="string in stringsDistintas">
                            <h3>{{ string }}</h3>
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered table-hover" style="table-layout: fixed; width:auto;">
                                    <thead>
                                        <tr>
                                            <td style="width:100px;"></td>
                                            <td align="center" style="width:50px;" ng-repeat="status in statusModulos | filter: { string: string }">
                                                <div ng-if="status.precentualMinTensao > 90" style="background-color: green; height:100px; width:100%;">
                                                    <div style="background-color: gray; height:{{status.percentualTensao}}%; width:100%;">
                                                    </div>
                                                </div>
                                                <div ng-if="status.precentualMinTensao == 90" style="background-color: yellow; height:100px; width:100%;">
                                                    <div style="background-color: gray; height:{{status.percentualTensao}}%; width:100%;">
                                                    </div>
                                                </div>
                                                <div ng-if="status.precentualMinTensao < 90" style="background-color: red; height:100px; width:100%;">
                                                    <div style="background-color: gray; height:{{status.percentualTensao}}%; width:100%;">
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                        <thead>
                                            <tbody>
                                                <tr>
                                                    <td style="width:100px;">Tensão</td>
                                                    <td align="center" style="width:50px;" ng-repeat="status in statusModulos | filter: { string: string }">
                                                        {{status.tensao}}
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td style="width:100px;">Temperatura</td>
                                                    <td align="center" style="width:50px;" ng-repeat="status in statusModulos | filter: { string: string }">
                                                        {{status.temperatura}}
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td style="width:100px;">Impedância</td>
                                                    <td align="center" style="width:50px;" ng-repeat="status in statusModulos | filter: { string: string }">
                                                        {{status.impedancia}}
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td style="width:100px;">Equalização</td>
                                                    <td align="center" style="width:50px;" ng-repeat="status in statusModulos | filter: { string: string }">
                                                        <span ng-if="status.percentualEqualizacao <= 20" dynamicbar1 data="x.bars">20,30,40,50,60</span>
                                                        <span ng-if="status.percentualEqualizacao <= 40 && status.percentualEqualizacao > 20" dynamicbar2 data="x.bars">20,30,40,50,60</span>
                                                        <span ng-if="status.percentualEqualizacao <= 60 && status.percentualEqualizacao > 40" dynamicbar3 data="x.bars">20,30,40,50,60</span>
                                                        <span ng-if="status.percentualEqualizacao <= 80 && status.percentualEqualizacao > 60" dynamicbar4 data="x.bars">20,30,40,50,60</span>
                                                        <span ng-if="status.percentualEqualizacao <= 100 && status.percentualEqualizacao > 80" dynamicbar5 data="x.bars">20,30,40,50,60</span>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td style="width:100px;">Número</td>
                                                    <td align="center" style="width:50px;" ng-repeat="status in statusModulos | filter: { string: string }">
                                                        {{status.bateria}}
                                                    </td>
                                                </tr>
                                            </tbody>
                                </table>
                            </div>
                        </div>
                    </section>
                    </fieldset>

                </script>
                <script>
                    angular.module('app', ['ngRoute', 'ngResource'])
                        //---------------
                        // Services
                        //---------------
                        .factory('StatusModulos', ['$resource', function ($resource) {
                            return $resource('/statusmodulo/:id', null, {
                                'update': { method: 'PUT' },
                                'query': {
                                    isArray: true,
                                    method: 'GET'
                                }
                            });
                        }])
                        //---------------
                        // Controllers
                        //---------------
                        .controller('StatusModuloController', ['$scope', 'StatusModulos', function ($scope, StatusModulos) {
                            StatusModulos.query(function (res) {
                                $scope.statusModulos = res;
                                var flags = [], output = [], l = $scope.statusModulos.length, i;
                                for (i = 0; i < l; i++) {
                                    if (flags[$scope.statusModulos[i].string]) continue;
                                    flags[$scope.statusModulos[i].string] = true;
                                    output.push($scope.statusModulos[i].string);
                                }
                                $scope.stringsDistintas = output;
                            }, function (error) {
                                // Error handler code
                            });
                            $scope.nomeUsuario = '<%= username %>';
                            $scope.acessoUsuario = '<%= userAccess %>';
                            $scope.emailUsuario = '<%= userEmail %>';
                            setInterval(function () {
                                StatusModulos.query(function (res) {
                                    $scope.statusModulos = res;
                                    var flags = [], output = [], l = $scope.statusModulos.length, i;
                                    for (i = 0; i < l; i++) {
                                        if (flags[$scope.statusModulos[i].string]) continue;
                                        flags[$scope.statusModulos[i].string] = true;
                                        output.push($scope.statusModulos[i].string);
                                    }
                                    $scope.stringsDistintas = output;
                                }, function (error) {
                                    // Error handler code
                                });
                            }, 1500);
                        }])
                        .directive('dynamicbar1', function () {
                            return {
                                scope: {
                                    data: '='
                                },
                                link: function (scope, element) {
                                    element.sparkline(scope.data, {
                                        type: 'bar',
                                        width: 50,
                                        height: 15,
                                        barWidth: 3,
                                        colorMap: ["green", "green", "gray", "gray", "gray", "gray"]
                                    });
                                }
                            }
                        })
                        .directive('dynamicbar2', function () {
                            return {
                                scope: {
                                    data: '='
                                },
                                link: function (scope, element) {
                                    element.sparkline(scope.data, {
                                        type: 'bar',
                                        width: 50,
                                        height: 15,
                                        barWidth: 3,
                                        colorMap: ["green", "green", "green", "gray", "gray", "gray"]
                                    });
                                }
                            }
                        })
                        .directive('dynamicbar3', function () {
                            return {
                                scope: {
                                    data: '='
                                },
                                link: function (scope, element) {
                                    element.sparkline(scope.data, {
                                        type: 'bar',
                                        width: 50,
                                        height: 15,
                                        barWidth: 3,
                                        colorMap: ["green", "green", "green", "green", "gray", "gray"]
                                    });
                                }
                            }
                        })
                        .directive('dynamicbar4', function () {
                            return {
                                scope: {
                                    data: '='
                                },
                                link: function (scope, element) {
                                    element.sparkline(scope.data, {
                                        type: 'bar',
                                        width: 50,
                                        height: 15,
                                        barWidth: 3,
                                        colorMap: ["green", "green", "green", "green", "green", "gray"]
                                    });
                                }
                            }
                        })
                        .directive('dynamicbar5', function () {
                            return {
                                scope: {
                                    data: '='
                                },
                                link: function (scope, element) {
                                    element.sparkline(scope.data, {
                                        type: 'bar',
                                        width: 50,
                                        height: 15,
                                        barWidth: 3,
                                        colorMap: ["green", "green", "green", "green", "green", "green"]
                                    });
                                }
                            }
                        })

                        .directive('onFinishRender', function ($timeout) {
                            return {
                                restrict: 'A',
                                link: function (scope, element, attr) {
                                    if (scope.$last === true) {
                                        $timeout(function () {
                                            setDataTable();
                                        });
                                    }
                                }
                            }
                        })
                        //---------------
                        // Routes
                        //---------------
                        .config(['$routeProvider', function ($routeProvider) {
                            $routeProvider
                                .when('/', {
                                    templateUrl: '/statusModulo.html',
                                    controller: 'StatusModuloController'
                                })
                        }]);
                </script>

            </div>
            <!-- END MAIN CONTENT -->

        </div>
        <script>
            function setDataTable() {
                $(".datatabletemplate").dataTable({

                    // Tabletools options:
                    //   https://datatables.net/extensions/tabletools/button_options
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "oTableTools": {
                        "aButtons": [
                            "copy",
                            "csv",
                            "xls",
                            {
                                "sExtends": "pdf",
                                "sTitle": "SmartAdmin_PDF",
                                "sPdfMessage": "SmartAdmin PDF Export",
                                "sPdfSize": "letter"
                            },
                            {
                                "sExtends": "print"
                            }
                        ],
                        "sSwfPath": "smartadmin/js/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                    },
                    "language": {
                        "sEmptyTable": "Nenhum registro encontrado",
                        "sInfo": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                        "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                        "sInfoFiltered": "(Filtrados de _MAX_ registros)",
                        "sInfoPostFix": "",
                        "sInfoThousands": ".",
                        "sLengthMenu": "_MENU_ resultados por página",
                        "sLoadingRecords": "Carregando...",
                        "sProcessing": "Processando...",
                        "sZeroRecords": "Nenhum registro encontrado",
                        "sSearch": "Pesquisar",
                        "oPaginate": {
                            "sNext": "Próximo",
                            "sPrevious": "Anterior",
                            "sFirst": "Primeiro",
                            "sLast": "Último"
                        },
                        "oAria": {
                            "sSortAscending": ": Ordenar colunas de forma ascendente",
                            "sSortDescending": ": Ordenar colunas de forma descendente"
                        }
                    },
                    "order": [],
                    "columnDefs": [{
                        "targets": 'no-sort',
                        "orderable": false,
                    }],
                    "autoWidth": true
                });
            }
            function setChart() {
                if ($('#stacked-bar-graph').length) {
                    Morris.Bar({
                        element: 'stacked-bar-graph',
                        resize: true,
                        axes: false,
                        grid: false,
                        data: [{
                            y: 10,
                            z: 5
                        }],
                        xkey: 'x',
                        ykeys: ['y', 'z'],
                        labels: ['Y', 'Z'],
                        stacked: true,
                        hideHover: "always"
                    });
                }
            }
        </script>
        <script>
            $(document).ready(function () {
                $('#dataInstalacao').datepicker({
                    dateFormat: 'dd/mm/yy',
                    prevText: '<i class="fa fa-chevron-left"></i>',
                    nextText: '<i class="fa fa-chevron-right"></i>'
                });
                $("#alerta_tensMin").maskMoney({ decimal: ",", thousands: "." });
                $("#alerta_tensMax").maskMoney({ decimal: ",", thousands: "." });
                $("#alerta_tempMin").maskMoney({ decimal: ",", thousands: "." });
                $("#alerta_tempMax").maskMoney({ decimal: ",", thousands: "." });
                $("#alerta_impMin").maskMoney({ decimal: ",", thousands: "." });
                $("#alerta_impMax").maskMoney({ decimal: ",", thousands: "." });
                $("#alarme_tensMin").maskMoney({ decimal: ",", thousands: "." });
                $("#alarme_tensMax").maskMoney({ decimal: ",", thousands: "." });
                $("#alarme_tempMin").maskMoney({ decimal: ",", thousands: "." });
                $("#alarme_tempMax").maskMoney({ decimal: ",", thousands: "." });
                $("#alarme_impMin").maskMoney({ decimal: ",", thousands: "." });
                $("#alarme_impMax").maskMoney({ decimal: ",", thousands: "." });
                setTimeout(function () { $("#visao2").hide() }, 1000);
            });
            function alterarVisao() {
                if ($("#visao1").is(":visible")) {
                    $("#visao1").fadeOut();
                    $("#visao2").fadeIn();
                } else {
                    $("#visao2").fadeOut();
                    $("#visao1").fadeIn();
                }
                setTimeout(setChart(), 0);
            }
        </script>
        <% include partials/footer %>
</body>

</html>