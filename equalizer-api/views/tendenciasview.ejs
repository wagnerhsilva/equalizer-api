<!DOCTYPE html>
<html ng-app="app">

<head>
    <% include partials/head %>
    <style>
        .displayNone{display: none !important;}
        .checkboxes label {
            display: block;
            float: left;
            padding-right: 10px;
            white-space: nowrap;
        }
        .checkboxes input {
            vertical-align: middle;
        }
        .checkboxes label span {
            vertical-align: middle;
        }
    </style>
</head>

<body class="">
    <% include partials/header %>
        <div id="main" role="main">

            <!-- RIBBON -->
            <div id="ribbon">

                <!-- breadcrumb -->
                <ol class="breadcrumb">
                    <li><%= translate.status %></li>
                    <li><%= translate.tendencies %></li>
                </ol>
            </div>
            <div id="content">
                <div class="row">
                    <article class="col-sm-12 col-md-12 col-lg-12">

                        <!-- Widget ID (each widget will need unique ID)-->
                        <div class="jarviswidget" id="wid-id-4" data-widget-editbutton="false" data-widget-custombutton="false">
                            <header>
                                <span class="widget-icon"><i class="fa fa-edit"></i></span>
                                <h2><%= translate.tendencies %></h2>

                            </header>
                            <div>
                                <div class="jarviswidget-editbox">
                                </div>
                                <div class="widget-body">
                                    <ng-view></ng-view>
                                </div>
                            </div>
                        </div>
                    </article>

                </div>
                <script type="text/ng-template" id="/tendencias.html">
                    <section>
                        <div>
                            <div class="row" style="padding-left: 20px;padding-right: 20px;padding-top: 20px;">
                                <div>
                                    <div class="checkboxes">
                                        <label for="x"><input type="checkbox" id="x" ng-model="chkImpedance" ng-click="onImpedanceChanged();"/> <span><%= translate.impedance %></span></label>
                                        <label for="y"><input type="checkbox" id="y" ng-model="chkTemperature" ng-click="onTemperatureChanged();"/> <span><%= translate.temperature %></span></label>
                                    </div>
                                </div>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered table-hover datatabletemplate">
                                    <thead>
                                        <tr>
                                            <td class="no-sort" align="center"><%= translate.battery %></td>
                                            <td align="center" colspan="{{ zeroWidth }}"><%= translate.ref_zero %></td>
                                            <td align="center" ng-repeat="f in range(readsCount) track by $index" colspan="{{ dataLength }}">
                                                {{ ($index + 1) }}º Medição
                                            </td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td></td>
                                            <td align="center" ng-class="{displayNone: hasImpedance == 0}"><%= translate.impedance %> Ohms</td>
                                            <td align="center" ng-class="{displayNone: hasTemperature == 0}"><%= translate.temperature %> ºC</td>
                                            <td align="center" ng-repeat="f in range(dataLength*readsCount) track by $index" >
                                                <div ng-bind-html=" getInnerText($index, dataLength, hasImpedance, hasTemperature) | trust"></div>
                                            </td>
                                        </tr>
                                        <tr ng-repeat= "f in range(tendenceStatus.batterycount) track by $index">
                                            <td align="center">{{tendenceStatus.data[$index * tendenceStatus.iterations].bateria}}</td>
                                            <td align="center" ng-class="{displayNone: hasImpedance == 0}">{{(tendenceStatus.data[$index * tendenceStatus.iterations].impedancia)/100}}</td>
                                            <td align="center" ng-class="{displayNone: hasTemperature == 0}">{{(tendenceStatus.data[$index * tendenceStatus.iterations].temperatura)/10}}</td>
                                            <td align="center" ng-repeat="s in range(dataLength*readsCount) track by $index">
                                                <div ng-bind-html=" getInnerContent($index, $parent.$index, tendenceStatus.data, dataLength, hasImpedance, hasTemperature, tendenceStatus.iterations) | trust"></div>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </section>
                    </fieldset>

                </script>
                <script>
                    angular.module('app', ['ngRoute', 'ngResource'])
                        //---------------
                        // Services
                        //---------------
                        .factory('StatusTendence', ['$resource', function ($resource) {
                            return $resource('/tendence/status', null, {
                                'update': { method: 'PUT' },
                                'query': {
                                    // isArray: true,
                                    method: 'GET'
                                }
                            });
                        }])

                        .filter("trust", ['$sce', function($sce) {
                            return function(htmlCode){
                                return $sce.trustAsHtml(htmlCode);
                            }
                        }])
                        //---------------
                        // Controllers
                        //---------------
                        .controller('StatusTendenceController', ['$scope', 'StatusTendence', function ($scope, StatusTendence) {
                            $scope.readsCount = 1;
                            $scope.hasImpedance = 1;
                            $scope.hasTemperature = 1;
                            $scope.chkImpedance = ($scope.hasImpedance === 1);
                            $scope.chkTemperature = ($scope.hasTemperature === 1);
                            $scope.onImpedanceChanged = function(){
                                $scope.hasImpedance = ($scope.chkImpedance ? 0 : 1);
                                app_set_cookie("tendImpChk", $scope.hasImpedance, 24);
                                app_set_cookie("tendTempChk", $scope.hasTemperature, 24);
                                $scope.zeroWidth = $scope.hasImpedance + $scope.hasTemperature;
                                $scope.dataLength = 2 * $scope.zeroWidth;
                            };

                            $scope.onTemperatureChanged = function(){
                                $scope.hasTemperature = ($scope.chkTemperature ? 0 : 1);
                                app_set_cookie("tendImpChk", $scope.hasImpedance, 24);
                                app_set_cookie("tendTempChk", $scope.hasTemperature, 24);
                                $scope.zeroWidth = $scope.hasImpedance + $scope.hasTemperature;
                                $scope.dataLength = 2 * $scope.zeroWidth;
                            };

                            StatusTendence.query(function(res){
                                $scope.tendenceStatus = res;
                                $scope.readsCount = $scope.tendenceStatus.iterations - 1;
                                $scope.batteryCount = $scope.tendenceStatus.batterycount;
                            }, function(error){

                            });

                            
                            $scope.nomeUsuario = '<%= username %>';
                            $scope.acessoUsuario = '<%= userAccess %>';
                            $scope.emailUsuario = '<%= userEmail %>';
                            $scope.range = function(val){
                                return new Array(val);
                            }
                            
                            $scope.zeroWidth = $scope.hasImpedance + $scope.hasTemperature;
                            $scope.dataLength = 2 * $scope.zeroWidth;

                            $scope.round = function(value, decimals) {
                                return Number(Math.round(value+'e'+decimals)+'e-'+decimals);
                            }

                            $scope.getInnerContent = function(index, parentIndex, data, dataLength, hasImpedance, hasTemperature, iterations){
                                if(data){
                                    var cellLoc = index;
                                    var cindex = parseInt(cellLoc / dataLength) + 1;
                                    cindex += (parentIndex) * iterations;
                                    var TargetBaterry = data[cindex];
                                    if(dataLength === 4){
                                        if(index % 4 === 0){
                                            return (TargetBaterry.impedancia/100).toString();
                                        }else if(index % 4 === 1){
                                            return (TargetBaterry.temperatura/10).toString();
                                        }else if(index % 4 === 2){
                                            return ((Math.round(TargetBaterry.deltaImpedancia.toString()*100)/100) + " %");
                                        }else{
                                            return ((Math.round(TargetBaterry.deltaTemperatura*100)/100).toString() + " %");
                                        }
                                    }else{
                                        if(hasImpedance){
                                            if(index % 2 === 0){
                                                return (TargetBaterry.impedancia/100).toString();
                                            }else{
                                                return ((Math.round(TargetBaterry.deltaImpedancia*100)/100).toString() + " %");
                                            }
                                        }else if(hasTemperature){
                                            if(index % 2 === 0){
                                                return (TargetBaterry.temperatura/10).toString();
                                            }else{
                                                return ((Math.round(TargetBaterry.deltaTemperatura*100)/100).toString() + " %");
                                            }
                                        }else{
                                            return "";
                                        }
                                    }
                                }else{
                                    return "";
                                }
                            };

                            $scope.getInnerText = function(index, dataLength, hasImpedance, hasTemperature){
                                if(dataLength === 4){
                                    if(index % 4 === 0){
                                        return "Impedância Ohms";
                                    }else if(index % 4 === 1){
                                        return "Temperatura ºC";
                                    }else if(index % 4 === 2){
                                        return "Impedância &Delta;%";
                                    }else{
                                        return "Temperatura &Delta;%";
                                    }
                                }else{
                                    if(hasImpedance){
                                        if(index % 2 === 0){
                                            return "Impedância Ohms";
                                        }else{
                                            return "Impedância &Delta;%";
                                        }
                                    }else if(hasTemperature){
                                        if(index % 2 === 0){
                                            return "Temperatura ºC";
                                        }else{
                                            return "Temperatura &Delta;%";
                                        }
                                    }else{
                                        return "";
                                    }
                                }
                            };
                            
                        }])
                        //---------------
                        // Routes
                        //---------------
                        .config(['$routeProvider', function ($routeProvider) {
                            $routeProvider
                                .when('/', {
                                    templateUrl: '/tendencias.html',
                                    controller: 'StatusTendenceController'
                                })
                        }]);
                </script>

            </div>
            <!-- END MAIN CONTENT -->

        </div>
        <script>
            $(document).ready(function () {

            });
        </script>
        <% include partials/footer %>
</body>

</html>